name: CWA Coastal Wave and Risk Forecast

on:
  schedule:
    - cron: '0 21 * * *'  # 每天 UTC 21:00（台灣時間早上5點）
    - cron: '0 22 * * *'  # 每天 UTC 22:00（台灣時間早上6點）
  workflow_dispatch:  # 允許手動觸發

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: main  # 確保從 main 分支檢出

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgdal-dev libgeos-dev libproj-dev
        # 清理 matplotlib 字型快取
        rm -rf ~/.cache/matplotlib
        # 更新系統字型快取並列出所有字型
        fc-cache -fv
        fc-list | grep "Noto Sans" || echo "No Noto Sans fonts found"
        # 檢查儲存庫中的字型檔案
        ls -l fonts/ | grep "NotoSansTC" || echo "No NotoSansTC fonts found in repo"

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run visualization script
      env:
        CWA_API_KEY: ${{ secrets.CWA_API_KEY }}
      run: python CWA_Waverisk.py

    - name: Commit and push images and data to main branch
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        mkdir -p data images  # 確保 data 和 images 資料夾存在
        git add images/* data/waverisk_data.json
        git commit -m "Add generated wave risk charts and data to images/ and data/ directories" || echo "No changes to commit"
        git push origin main

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./
        keep_files: false  # 清除舊檔案，確保最新
        destination_dir: ./
        include: images/CWA_waverisk.png data/waverisk_data.json  # 修正為空格分隔的字符串

    - name: Upload JSON as artifact (for debugging)
      uses: actions/upload-artifact@v3
      with:
        name: waverisk-data
        path: data/waverisk_data.json
